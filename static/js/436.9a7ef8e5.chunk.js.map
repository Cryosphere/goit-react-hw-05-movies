{"version":3,"file":"static/js/436.9a7ef8e5.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAQ,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,qCAAwCC,IADzC,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qDAKRC,EAAQ,mCAAG,WAAMC,GAAN,uFACCN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,gCADD,cAChBH,EADgB,yBAIfA,EAASC,MAJM,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAI,mCAAG,WAAMD,GAAN,uFACKR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADL,cACZE,EADY,yBAIXA,EAASC,KAAKM,MAJH,2CAAH,sDAOJC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,sICJvB,EAxBgB,WACd,IACA,ECHwB,SAAAI,GACtB,OAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACFP,IACAG,EAAAA,EAAAA,IAAWH,GAASQ,MAAK,SAAAb,GACrBW,GAAW,OAAIX,EAASc,SAC3B,GACR,GAAE,CAACT,IAEG,CAAEK,QAAAA,EACZ,CDRqBK,EADAC,EAAAA,EAAAA,MAAZX,SACAK,EAAR,EAAQA,QAER,OAAKA,EAEkB,IAAnBA,EAAQO,QACH,qEAIP,wBACGP,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOC,OAKnB,OAfgB,SAACE,EAAA,EAAD,GAkBtB,C","sources":["API/API.jsx","components/Reviews/Reviews.jsx","hooks/useReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '005a1a4b58d0452d1baa0b4ebe777e33';\n\nexport const Trending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieID = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const Cast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { useParams } from 'react-router-dom';\nimport { useReviews } from 'hooks/useReviews';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useReviews(movieId);\n\n  if (!reviews) return <Loader />;\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.author}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import { getReviews } from \"API/API\";\nimport { useEffect, useState } from \"react\";\n\nexport const useReviews = movieId => {\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        if (movieId) \n            getReviews(movieId).then(response => {\n                setReviews([...response.results]);\n            });\n    }, [movieId]);\n\n    return { reviews };\n};"],"names":["axios","API_KEY","Trending","response","data","getQuery","query","getMovieID","movieId","Cast","cast","getReviews","useState","reviews","setReviews","useEffect","then","results","useReviews","useParams","length","map","review","author","content","Loader"],"sourceRoot":""}