{"version":3,"file":"static/js/573.10b7f83a.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAQ,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,qCAAwCC,IADzC,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qDAKRC,EAAQ,mCAAG,WAAMC,GAAN,uFACCN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCK,EADnC,gCADD,cAChBH,EADgB,yBAIfA,EAASC,MAJM,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAI,mCAAG,WAAMD,GAAN,uFACKR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADL,cACZE,EADY,yBAIXA,EAASC,KAAKM,MAJH,2CAAH,sDAOJC,EAAU,mCAAG,WAAMH,GAAN,uFACDR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,0IC9BVQ,EAAYC,EAAAA,GAAAA,IAAH,4SAaTC,EAAOD,EAAAA,GAAAA,KAAH,8C,kBCwBjB,EAlCa,WACX,IACA,ECJqB,SAAAL,GACnB,OAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACFV,IACAC,EAAAA,EAAAA,IAAKD,GAASW,MAAK,SAAAhB,GACfc,GAAU,OAAId,GACjB,GACR,GAAE,CAACK,IAEG,CAAEQ,OAAAA,EACZ,CDPoBI,EADCC,EAAAA,EAAAA,MAAZb,SACAQ,EAAR,EAAQA,OACFM,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAIH,EAASI,OAEhBV,GAGH,SAACJ,EAAD,UACGI,EAAOW,KAAI,SAAAC,GACV,OACE,4BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,+EAIFC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,SAET,wBACE,SAACpB,EAAD,UAAOc,EAAMI,UAEf,gCAAQJ,EAAMO,eAdNP,EAAMQ,GAiBnB,OAvBe,SAACC,EAAA,EAAD,GA0BrB,C","sources":["API/API.jsx","components/Cast/cast.styled.js","components/Cast/Cast.jsx","hooks/useCast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '005a1a4b58d0452d1baa0b4ebe777e33';\n\nexport const Trending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieID = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const Cast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n    grid-gap: 26px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Span = styled.span`\n    font-weight:600;\n`;","import { useCast } from 'hooks/useCast';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Container, Span } from './cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { actors } = useCast(movieId);\n  const location = useLocation();\n  console.log(location.state);\n\n  if (!actors) return <Loader />;\n\n  return (\n    <Container>\n      {actors.map(actor => {\n        return (\n          <div key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.name}\n              width=\"180\"\n              height=\"250\"\n            />\n            <p>\n              <Span>{actor.name}</Span>\n            </p>\n            <p>As: {actor.character}</p>\n          </div>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import { Cast } from \"API/API\";\nimport { useEffect, useState } from \"react\";\n\nexport const useCast = movieId => {\n    const [actors, setActors] = useState(null);\n\n    useEffect(() => {\n        if (movieId)\n            Cast(movieId).then(response => {\n                setActors([...response]);\n            });\n    }, [movieId]);\n\n    return { actors };\n};"],"names":["axios","API_KEY","Trending","response","data","getQuery","query","getMovieID","movieId","Cast","cast","getReviews","Container","styled","Span","useState","actors","setActors","useEffect","then","useCast","useParams","location","useLocation","console","log","state","map","actor","src","profile_path","alt","name","width","height","character","id","Loader"],"sourceRoot":""}